#############################################################################
# Makefile for building: SPOpenVPNService
# Generated by qmake (2.01a) (Qt 4.7.3) on: Di 3. Jan 16:23:14 2012
# Project:  server.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\QtSDK\Desktop\Qt\4.7.3\mingw\include\QtCore" -I"c:\QtSDK\Desktop\Qt\4.7.3\mingw\include\QtNetwork" -I"c:\QtSDK\Desktop\Qt\4.7.3\mingw\include" -I"src" -I"c:\QtSDK\Desktop\Qt\4.7.3\mingw\include\ActiveQt" -I"release" -I"c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L"c:\QtSDK\Desktop\Qt\4.7.3\mingw\lib" -luser32 -lQtNetwork4 -lQtCore4 
QMAKE         = c:\qtsdk\desktop\qt\4.7.3\mingw\bin\qmake.exe
IDC           = c:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		openvpn.cpp \
		sslserverconnection.cpp \
		sslserver.cpp \
		sslkeycontent.cpp \
		sslconnections.cpp \
		debug.cpp \
		service.cpp \
		srvcli.cpp \
		tapdriver.cpp \
		check64.cpp \
		src\qtservice.cpp \
		src\qtservice_win.cpp release\moc_openvpn.cpp \
		release\moc_sslserverconnection.cpp \
		release\moc_sslserver.cpp \
		release\moc_service.cpp \
		release\moc_srvcli.cpp \
		release\moc_tapdriver.cpp
OBJECTS       = release/main.o \
		release/openvpn.o \
		release/sslserverconnection.o \
		release/sslserver.o \
		release/sslkeycontent.o \
		release/sslconnections.o \
		release/debug.o \
		release/service.o \
		release/srvcli.o \
		release/tapdriver.o \
		release/check64.o \
		release/qtservice.o \
		release/qtservice_win.o \
		release/moc_openvpn.o \
		release/moc_sslserverconnection.o \
		release/moc_sslserver.o \
		release/moc_service.o \
		release/moc_srvcli.o \
		release/moc_tapdriver.o
DIST          = 
QMAKE_TARGET  = SPOpenVPNService
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = SPOpenVPNService.exe
DESTDIR_TARGET = release\SPOpenVPNService.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.SPOpenVPNService.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\win32-g++ CONFIG+=release -o Makefile.Release server.pro

dist:
	$(ZIP) SPOpenVPNService.zip $(SOURCES) $(DIST) server.pro c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\qconfig.pri c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\modules\qt_webkit_version.pri c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\qt_functions.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\qt_config.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\exclusive_builds.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\default_pre.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\default_pre.prf common.pri src\qtservice.pri c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\release.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\debug_and_release.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\default_post.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\default_post.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\build_pass.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\qt.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\thread.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\moc.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\console.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\rtti.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\exceptions.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\win32\stl.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\shared.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\warn_on.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\resources.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\uic.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\yacc.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\lex.prf c:\QtSDK\Desktop\Qt\4.7.3\mingw\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\openvpn.o release\sslserverconnection.o release\sslserver.o release\sslkeycontent.o release\sslconnections.o release\debug.o release\service.o release\srvcli.o release\tapdriver.o release\check64.o release\qtservice.o release\qtservice_win.o release\moc_openvpn.o release\moc_sslserverconnection.o release\moc_sslserver.o release\moc_service.o release\moc_srvcli.o release\moc_tapdriver.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_openvpn.cpp release/moc_sslserverconnection.cpp release/moc_sslserver.cpp release/moc_service.cpp release/moc_srvcli.cpp release/moc_tapdriver.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_openvpn.cpp release\moc_sslserverconnection.cpp release\moc_sslserver.cpp release\moc_service.cpp release\moc_srvcli.cpp release\moc_tapdriver.cpp
release/moc_openvpn.cpp: openvpn.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 openvpn.h -o release\moc_openvpn.cpp

release/moc_sslserverconnection.cpp: sslkeycontent.h \
		paths.h \
		sslserverconnection.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 sslserverconnection.h -o release\moc_sslserverconnection.cpp

release/moc_sslserver.cpp: sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h \
		sslserver.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 sslserver.h -o release\moc_sslserver.cpp

release/moc_service.cpp: src/qtservice.h \
		sslserver.h \
		sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h \
		service.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 service.h -o release\moc_service.cpp

release/moc_srvcli.cpp: srvcli.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 srvcli.h -o release\moc_srvcli.cpp

release/moc_tapdriver.cpp: check64.h \
		tapdriver.h
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 tapdriver.h -o release\moc_tapdriver.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all: release/qtservice.moc release/qtservice_win.moc
compiler_moc_source_clean:
	-$(DEL_FILE) release\qtservice.moc release\qtservice_win.moc
release/qtservice.moc: src/qtservice.h \
		src/qtservice_p.h \
		src/qtservice.cpp
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 src\qtservice.cpp -o release\qtservice.moc

release/qtservice_win.moc: src/qtservice.h \
		src/qtservice_p.h \
		src/qtservice_win.cpp
	C:\QtSDK\Desktop\Qt\4.7.3\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 src\qtservice_win.cpp -o release\qtservice_win.moc

compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_moc_source_clean 



####### Compile

release/main.o: main.cpp service.h \
		src/qtservice.h \
		sslserver.h \
		sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/openvpn.o: openvpn.cpp openvpn.h \
		debug.h \
		qthreadexec.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\openvpn.o openvpn.cpp

release/sslserverconnection.o: sslserverconnection.cpp sslserverconnection.h \
		sslkeycontent.h \
		paths.h \
		sslserver.h \
		sslconnections.h \
		debug.h \
		openvpn.h \
		srvcli.h \
		tapdriver.h \
		check64.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sslserverconnection.o sslserverconnection.cpp

release/sslserver.o: sslserver.cpp sslserver.h \
		sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sslserver.o sslserver.cpp

release/sslkeycontent.o: sslkeycontent.cpp sslkeycontent.h \
		paths.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sslkeycontent.o sslkeycontent.cpp

release/sslconnections.o: sslconnections.cpp sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sslconnections.o sslconnections.cpp

release/debug.o: debug.cpp debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\debug.o debug.cpp

release/service.o: service.cpp service.h \
		src/qtservice.h \
		sslserver.h \
		sslconnections.h \
		sslserverconnection.h \
		sslkeycontent.h \
		paths.h \
		debug.h \
		srvcli.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\service.o service.cpp

release/srvcli.o: srvcli.cpp srvcli.h \
		qthreadexec.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\srvcli.o srvcli.cpp

release/tapdriver.o: tapdriver.cpp tapdriver.h \
		check64.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tapdriver.o tapdriver.cpp

release/check64.o: check64.cpp check64.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\check64.o check64.cpp

release/qtservice.o: src/qtservice.cpp src/qtservice.h \
		src/qtservice_p.h \
		release/qtservice.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\qtservice.o src\qtservice.cpp

release/qtservice_win.o: src/qtservice_win.cpp src/qtservice.h \
		src/qtservice_p.h \
		release/qtservice_win.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\qtservice_win.o src\qtservice_win.cpp

release/moc_openvpn.o: release/moc_openvpn.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_openvpn.o release\moc_openvpn.cpp

release/moc_sslserverconnection.o: release/moc_sslserverconnection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_sslserverconnection.o release\moc_sslserverconnection.cpp

release/moc_sslserver.o: release/moc_sslserver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_sslserver.o release\moc_sslserver.cpp

release/moc_service.o: release/moc_service.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_service.o release\moc_service.cpp

release/moc_srvcli.o: release/moc_srvcli.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_srvcli.o release\moc_srvcli.cpp

release/moc_tapdriver.o: release/moc_tapdriver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_tapdriver.o release\moc_tapdriver.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

